"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var common_1 = require('@angular/common');
var angularfire2_1 = require('angularfire2');
var EnvironmentComponent = (function () {
    function EnvironmentComponent(af, renderer) {
        var _this = this;
        this.URL = window.location.href;
        this.onOff = af.database.object('/' + this.URL.split('/game/')[1] + '/Globals/OnOff', { preserveSnapshot: true });
        this.onOff.subscribe(function (snapshot) {
            _this.environmentSnapshot = snapshot.val();
        });
        this.environment = af.database.object('/' + this.URL.split('/game/')[1] + '/Globals/Environment');
        this.players = af.database.object('/' + this.URL.split('/game/')[1] + '/Players', { preserveSnapshot: true });
        this.players.subscribe(function (snapshot) {
            _this.playersSnapshot = snapshot.val();
        });
        this.getKey = renderer.listenGlobal('document', 'keyup', function (event) {
            var key = event.keyCode;
            _this.toggleBtn(key);
        });
    }
    EnvironmentComponent.prototype.changeEnvironment = function (x) {
        var aether = 1;
        var material = 1;
        var chaos = 1;
        var order = 1;
        switch (x) {
            case 'rain':
                if (this.environmentSnapshot.rain == true) {
                    this.onOff.update({ rain: false });
                    break;
                }
                else {
                    this.onOff.update({ rain: true });
                    break;
                }
            case 'fog':
                if (this.environmentSnapshot.fog == true) {
                    this.onOff.update({ fog: false });
                    break;
                }
                else {
                    this.onOff.update({ fog: true });
                    break;
                }
            case 'lightning':
                if (this.environmentSnapshot.lightning == true) {
                    this.onOff.update({ lightning: false });
                    break;
                }
                else {
                    this.onOff.update({ lightning: true });
                    break;
                }
            case 'quake':
                if (this.environmentSnapshot.quake == true) {
                    this.onOff.update({ quake: false });
                    break;
                }
                else {
                    this.onOff.update({ quake: true });
                    break;
                }
            case 'snow':
                if (this.environmentSnapshot.snow == true) {
                    this.onOff.update({ snow: false });
                    break;
                }
                else {
                    this.onOff.update({ snow: true });
                    break;
                }
            case 'storm':
                if (this.environmentSnapshot.storm == true) {
                    this.onOff.update({ storm: false });
                    break;
                }
                else {
                    this.onOff.update({ storm: true });
                    break;
                }
        }
        if (this.environmentSnapshot.rain == true) {
            chaos += 1;
            material += 2;
        }
        if (this.environmentSnapshot.fog == true) {
            aether += 2;
            order += 1;
        }
        if (this.environmentSnapshot.lightning == true) {
            aether += 1;
            chaos += 2;
        }
        if (this.environmentSnapshot.quake == true) {
            order += 2;
            material += 1;
        }
        if (this.environmentSnapshot.snow == true) {
            aether += 2;
            material += 2;
        }
        if (this.environmentSnapshot.storm == true) {
            order += 2;
            chaos += 2;
        }
        this.environment.set({ aether: aether, material: material, chaos: chaos, order: order });
        this.changeChampionStats(aether, material, chaos, order);
    };
    EnvironmentComponent.prototype.changeChampionStats = function (aether, material, chaos, order) {
        if (this.playersSnapshot.player1.playerClass == 'Highwayman') {
            this.playersSnapshot.player1.physicalAttack = Math.floor((chaos * material) + 10);
            this.playersSnapshot.player1.physicalDefense = Math.floor(5 + material);
            this.playersSnapshot.player1.specialAttack = Math.floor(2 + (2 * order));
            this.playersSnapshot.player1.specialDefense = Math.floor(3 + chaos + aether);
            this.playersSnapshot.player1.dexterity = Math.floor(((10 * aether) + order) / material);
        }
        if (this.playersSnapshot.player1.playerClass == 'Elementalist') {
            this.playersSnapshot.player1.physicalAttack = Math.floor(4 + aether + material);
            this.playersSnapshot.player1.physicalDefense = Math.floor(3 + order);
            this.playersSnapshot.player1.specialAttack = Math.floor(((12 + aether) * chaos) / order);
            this.playersSnapshot.player1.specialDefense = Math.floor(10 + material + order);
            this.playersSnapshot.player1.dexterity = Math.floor(3 * chaos);
        }
        if (this.playersSnapshot.player1.playerClass == "Paragon") {
            this.playersSnapshot.player1.physicalAttack = Math.floor((order + material) * 2);
            this.playersSnapshot.player1.physicalDefense = Math.floor(((8 * material) + order) / (chaos * 2));
            this.playersSnapshot.player1.specialAttack = Math.floor((aether * 6) / material);
            this.playersSnapshot.player1.specialDefense = Math.floor(((7 * material) + chaos) / (order * 2));
        }
        if (this.playersSnapshot.player2.playerClass == 'Highwayman') {
            this.playersSnapshot.player2.physicalAttack = Math.floor((chaos * material) + 10);
            this.playersSnapshot.player2.physicalDefense = Math.floor(5 + material);
            this.playersSnapshot.player2.specialAttack = Math.floor(2 + (2 * order));
            this.playersSnapshot.player2.specialDefense = Math.floor(3 + chaos + aether);
            this.playersSnapshot.player2.dexterity = Math.floor(((10 * aether) + order) / material);
        }
        if (this.playersSnapshot.player2.playerClass == 'Elementalist') {
            this.playersSnapshot.player2.physicalAttack = Math.floor(4 + aether + material);
            this.playersSnapshot.player2.physicalDefense = Math.floor(3 + order);
            this.playersSnapshot.player2.specialAttack = Math.floor(((12 + aether) * chaos) / order);
            this.playersSnapshot.player2.specialDefense = Math.floor(10 + material + order);
            this.playersSnapshot.player2.dexterity = Math.floor(3 * chaos);
        }
        if (this.playersSnapshot.player2.playerClass == "Paragon") {
            this.playersSnapshot.player2.physicalAttack = Math.floor((order + material) * 2);
            this.playersSnapshot.player2.physicalDefense = Math.floor(((8 * material) + order) / (chaos * 2));
            this.playersSnapshot.player2.specialAttack = Math.floor((aether * 6) / material);
            this.playersSnapshot.player1.specialDefense = Math.floor(((7 * material) + chaos) / (order * 2));
        }
        this.playersSnapshot.player1.action = this.AISelectAction(this.playersSnapshot.player1, this.playersSnapshot.player2);
        this.playersSnapshot.player2.action = this.AISelectAction(this.playersSnapshot.player2, this.playersSnapshot.player1);
        this.players.update(this.playersSnapshot);
    };
    EnvironmentComponent.prototype.AISelectAction = function (player, enemy) {
        var action = "";
        var rng = (Math.floor(Math.random() * (100 - 0 + 1) + 0));
        if ((player.physicalAttack - enemy.physicalDefense) > (player.specialAttack - enemy.specialDefense)) {
            if (rng - (player.physicalAttack - enemy.physicalDefense) <= 0) {
                rng = 1;
            }
            else {
                rng -= (player.physicalAttack - enemy.physicalDefense);
            }
        }
        if ((player.physicalAttack - enemy.physicalDefense) < (player.specialAttack - enemy.specialDefense)) {
            if (rng + (player.specialAttack - enemy.specialDefense) >= 100) {
                rng = 100;
            }
            else {
                rng += (player.specialAttack - enemy.specialDefense);
            }
        }
        if (rng <= 33) {
            return "strike";
        }
        if (rng >= 66) {
            return "special";
        }
        if (rng < 66 && rng > 33) {
            return "defend";
        }
    };
    EnvironmentComponent.prototype.toggleBtn = function (key) {
        if (key == '65' || key == 'fog') {
            this.changeEnvironment('fog');
        }
        if (key == '83' || key == 'snow') {
            this.changeEnvironment('snow');
        }
        if (key == '68' || key == 'lightning') {
            this.changeEnvironment('lightning');
        }
        if (key == '70' || key == 'rain') {
            this.changeEnvironment('rain');
        }
        if (key == '71' || key == 'quake') {
            this.changeEnvironment('quake');
        }
        if (key == '72' || key == 'storm') {
            this.changeEnvironment('storm');
        }
    };
    EnvironmentComponent = __decorate([
        core_1.Component({
            selector: 'environment',
            template: "\n  <div *ngIf=\"environmentSnapshot\" class=\"container\">\n    <div class=\"col-sm-6 pull-left\">\n      <p>\n        To play, press key to turn on/off:<br>\n        [A] FOG; [S] SNOW; [D] LIGHTNING; [F] RAIN; [G] QUAKE; [H] STORM</p>\n    </div>\n    <div class=\"col-sm-6 pull-right envBtns\" *ngIf=\"environment\">\n      <div class=\"envBtnWrapper\" (click)=\"toggleBtn('fog')\" [ngSwitch]=\"environmentSnapshot.fog\">\n        <div *ngSwitchCase='true' class=\"envBtn active\">\n          <img src=\"./images/env_btn/env_fog_on.png\"></div>\n        <div *ngSwitchCase='false' class=\"envBtn\">\n          <img src=\"./images/env_btn/env_fog.png\"></div>\n        <p class=\"imgDescription\">Fog</p>\n      </div>\n      <div class=\"envBtnWrapper\" (click)=\"toggleBtn('snow')\" [ngSwitch]=\"environmentSnapshot.snow\">\n        <div *ngSwitchCase='true' class=\"envBtn active\">\n          <img src=\"./images/env_btn/env_hail_on.png\"></div>\n        <div *ngSwitchCase='false' class=\"envBtn\">\n          <img src=\"./images/env_btn/env_hail.png\"></div>\n        <p class=\"imgDescription\">Snow</p>\n      </div>\n      <div class=\"envBtnWrapper\" (click)=\"toggleBtn('lightning')\" [ngSwitch]=\"environmentSnapshot.lightning\">\n        <div *ngSwitchCase='true' class=\"envBtn active\">\n          <img src=\"./images/env_btn/env_lightning_on.png\"></div>\n        <div *ngSwitchCase='false' class=\"envBtn\">\n          <img src=\"./images/env_btn/env_lightning.png\"></div>\n        <p class=\"imgDescription\">Lightning</p>\n      </div>\n      <div class=\"envBtnWrapper\" (click)=\"toggleBtn('rain')\" [ngSwitch]=\"environmentSnapshot.rain\">\n        <div *ngSwitchCase='true' class=\"envBtn active\">\n          <img src=\"./images/env_btn/env_rain_on.png\"></div>\n        <div *ngSwitchCase='false' class=\"envBtn\">\n          <img src=\"./images/env_btn/env_rain.png\"></div>\n        <p class=\"imgDescription\">Rain</p>\n      </div>\n      <div class=\"envBtnWrapper\" (click)=\"toggleBtn('quake')\" [ngSwitch]=\"environmentSnapshot.quake\">\n        <div *ngSwitchCase='true' class=\"envBtn active\">\n          <img src=\"./images/env_btn/env_sun_on.png\"></div>\n        <div *ngSwitchCase='false' class=\"envBtn\">\n          <img src=\"./images/env_btn/env_sun.png\"></div>\n        <p class=\"imgDescription\">Quake</p>\n      </div>\n      <div class=\"envBtnWrapper\" (click)=\"toggleBtn('storm')\" [ngSwitch]=\"environmentSnapshot.storm\">\n        <div *ngSwitchCase='true' class=\"envBtn active\">\n          <img src=\"./images/env_btn/env_wind_on.png\"></div>\n        <div *ngSwitchCase='false' class=\"envBtn\">\n          <img src=\"./images/env_btn/env_wind.png\"></div>\n        <p class=\"imgDescription\">Storm</p>\n      </div>\n    </div>\n  </div>\n  ",
            styles: ["\n    @media (max-width: 736px) {\n      .envBtns {\n        display: none;\n      }\n    }\n    .envBtnWrapper {\n      display: inline-block;\n      background: transparent;\n      margin-left: 15px;\n    }\n    .envBtn {\n      background-color: #29b0ae;\n      border: none;\n      width: 64px;\n      height: 64px;\n      padding: 10px;\n      position: relative;\n      text-align: center;\n      vertical-align: middle;\n      text-decoration: uppercase;\n      color: #fff;\n      background-image: linear-gradient(bottom, rgb(41,144,176) 0%, rgb(113,222,220) 100%);\n      background-image: -o-linear-gradient(bottom, rgb(41,144,176) 0%, rgb(113,222,220) 100%);\n      background-image: -moz-linear-gradient(bottom, rgb(41,144,176) 0%, rgb(113,222,220) 100%);\n      background-image: -webkit-linear-gradient(bottom, rgb(41,144,176) 0%, rgb(113,222,220) 100%);\n      background-image: -ms-linear-gradient(bottom, rgb(41,144,176) 0%, rgb(113,222,220) 100%);\n      background-image: -webkit-gradient(\n      linear,\n      left bottom,\n      left top,\n      color-stop(0, rgb(41,144,176)),\n      color-stop(1, rgb(113,222,220))\n      );\n      -webkit-box-shadow: inset 0px 1px 0px #71dedc, 0px 6px 0px #164f60;\n      -moz-box-shadow: inset 0px 1px 0px #71dedc, 0px 6px 0px #164f60;\n      -o-box-shadow: inset 0px 1px 0px #71dedc, 0px 6px 0px #164f60;\n      box-shadow: inset 0px 1px 0px #71dedc, 0px 6px 0px #164f60;\n      -webkit-border-radius: 5px;\n      -moz-border-radius: 5px;\n      -o-border-radius: 5px;\n      border-radius: 5px;\n    }\n    .envBtn.active, .envBtn:active {\n      color: #2990b0;\n      text-shadow: 0px 1px 1px rgba(255,255,255,0.3);\n      background: rgb(41,144,176);\n      -webkit-box-shadow: inset 0px 1px 0px #71dedc, inset 0px -1px 0px #164f60;\n      -moz-box-shadow: inset 0px 1px 0px #71dedc, inset 0px -1px 0px #164f60;\n      -o-box-shadow: inset 0px 1px 0px #71dedc, inset 0px -1px 0px #164f60;\n      box-shadow: inset 0px 1px 0px #71dedc, inset 0px -1px 0px #164f60;\n      top: 2px;\n    }\n    .envBtn img {\n      width: 100%;\n      height: 100%;\n    }\n    .envBtnWrapper .imgDescription {\n      position: absolute;\n      background: transparent;\n      padding-top: 2px;\n      color: #fff;\n      text-transform: uppercase;\n      visibility: hidden;\n      opacity: 0;\n      -webkit-transition: visibility opacity 0.2s;\n      transition: visibility opacity 0.2s;\n    }\n    .envBtnWrapper:hover .imgDescription {\n      visibility: visible;\n      opacity: 1;\n    }\n  "],
            directives: [common_1.NgSwitch, common_1.NgSwitchCase, common_1.NgSwitchDefault]
        }), 
        __metadata('design:paramtypes', [angularfire2_1.AngularFire, core_1.Renderer])
    ], EnvironmentComponent);
    return EnvironmentComponent;
}());
exports.EnvironmentComponent = EnvironmentComponent;

//# sourceMappingURL=data:application/json;base64,
